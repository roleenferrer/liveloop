openapi: '3.0.3'

info:
  description: Live Loop Backend
  version: 0.1.0
  title: Live Loop Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /user:
    get:
      description: Return user specified by email and password
      parameters:
      - in: query
        name: email
        description: Email to search DB with
        required: true
        schema:
          type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        404:
          description: User not found (email or password incorrect)
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Insert user into database
      requestBody:
        description: User name, email, and encrypted password to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUser'
      responses:
        201:
          description: User inserted successfully
        400:
          description: Incorrect properties
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /location:
    get:
      description: Get coordinate and route of specific shuttle
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusLocation'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message

    BusLocation:
      type: object
      properties:
        bus_id:
          type: integer
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        direction:
          type: string
        active:
          type: boolean
      required:
        - bus_id
        - longitude
        - latitude
        - direction
        - active

    GetUser:
      type: object
      properties:
        member:
          type: object
          properties:
            member:
              type: object
              properties:
                hash:
                  type: string
                name:
                  type: string
                email:
                  type: string
              required:
                - name
                - email
    PostUser:
      type: object
      properties:
        fname:
          type: string
        lname:
          type: string
        email:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT